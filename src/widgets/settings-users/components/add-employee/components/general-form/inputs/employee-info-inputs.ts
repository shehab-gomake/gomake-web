import {Employee} from "@/widgets/add-employee/interface/employee";

const employeeInfoInputs = (state: Employee)  => {
    return [
        {
            name: "firstname",
            label: "usersSettings.firstname",
            type: "text",
            placeholder: "usersSettings.firstname",
            required: true,
            parameterKey: "firstname",
            options: [],
            value: state.firstname,
            machineInputType: 'input',
            isValid: !!state.firstname,
        },
        {
            name: "lastName",
            label: "usersSettings.lastname",
            type: "text",
            placeholder: "usersSettings.lastname",
            required: true,
            parameterKey: "lastname",
            options: [],
            value: state.lastname,
            machineInputType: 'input',
            isValid: !!state.lastname,
        },
        {
            name: "phone",
            label: "usersSettings.phone",
            type: "text",
            placeholder: "usersSettings.phone",
            required: true,
            parameterKey: "phone",
            options: [],
            value: state.phone,
            machineInputType: 'input',
            isValid: !!state.phone,
        },
        {
            name: "email",
            label: "usersSettings.email",
            type: "text",
            placeholder: "usersSettings.email",
            required: true,
            parameterKey: "email",
            options: [],
            value: state.email,
            machineInputType: 'input',
            isValid: !!state.email,
        },
        {
            name: "PinCodeForLoginWithApplication",
            label: "usersSettings.PinCodeForLoginWithApplication",
            type: "text",
            placeholder: "usersSettings.PinCodeForLoginWithApplication",
            required: true,
            parameterKey: "PinCodeForLoginWithApplication",
            options: [],
            value: state.PinCodeForLoginWithApplication,
            machineInputType: 'input',
            isValid: !!state.PinCodeForLoginWithApplication,
        },
        {
            name: "smsTemplatesGroupId",
            label: "usersSettings.smsTemplatesGroupId",
            type: "select",
            placeholder: "usersSettings.smsTemplatesGroupId",
            required: true,
            parameterKey: "smsTemplatesGroupId",
            value: state.smsTemplatesGroupId,
            options: [],
            isValid: true,
            optionsUrl: '/v1/crm-service/roles/get-all-sms-templates'
        },
        {
            name: "isGraphicArtist",
            label: "usersSettings.isGraphicArtist",
            type: "switch",
            placeholder: "usersSettings.isGraphicArtist",
            required: true,
            parameterKey: "isGraphicArtist",
            value: state.isGraphicArtist,
            options: [],
            machineInputType: 'input',
            isValid: true,
        },
        {
            name: "isAgent",
            label: "usersSettings.isAgent",
            type: "switch",
            placeholder: "usersSettings.isAgent",
            required: true,
            parameterKey: "isAgent",
            value: state.isAgent,
            options: [],
            machineInputType: 'input',
            isValid: true,
        },
    ];
}

export {employeeInfoInputs};