import { useDateFormat } from "@/hooks/use-date-format";

const DepositInputs = (state) => {
  const { GetDateFormat } = useDateFormat();

  return [
    {
      name: "depositDate",
      label: "deposits.depositDate",
      type: "text",
      placeholder: "deposits.depositDate",
      required: false,
      parameterKey: "depositDate",
      value: GetDateFormat(state?.depositDate) ,
      options: [],
      isValid: true,
      readOnly: true,
    },
    {
      name: "depositAccount",
      label: "deposits.accountCode",
      type: "text",
      placeholder: "deposits.accountCode",
      required: false,
      parameterKey: "depositAccount",
      value: state?.depositAccount,
      options: [],
      isValid: true,
      readOnly: true,
    },
    {
      name: "bankName",
      label: "deposits.depositedToBank",
      type: "text",
      placeholder: "deposits.depositedToBank",
      required: false,
      parameterKey: "bankName",
      value: state?.bankName,
      options: [],
      isValid: true,
      readOnly: true,
    },
    {
      name: "bankBranch",
      label: "deposits.depositedToBranch",
      type: "text",
      placeholder: "deposits.depositedToBranch",
      required: false,
      parameterKey: "bankBranch",
      value: state?.bankBranch,
      options: [],
      isValid: true,
      readOnly: true,
    },
    {
      name: "bankAccountNUM",
      label: "deposits.depositedToAccount",
      type: "text",
      placeholder: "deposits.depositedToAccount",
      required: false,
      parameterKey: "bankAccountNUM",
      value: state?.bankAccountNUM,
      options: [],
      isValid: true,
      readOnly: true,
    },
    {
      name: "bankReference",
      label: "deposits.bankRefernce",
      type: "text",
      placeholder: "deposits.bankRefernce",
      required: false,
      parameterKey: "bankReference",
      value: state?.bankReference,
      options: [],
      isValid: true,
      readOnly: true,
    },
    {
      name: "depositor",
      label: "deposits.depositor",
      type: "text",
      placeholder: "deposits.depositor",
      required: false,
      parameterKey: "depositor",
      value: state?.depositor,
      options: [],
      isValid: true,
      readOnly: true,
    },
    {
      name: "allocationAccount",
      label: "deposits.account",
      type: "text",
      placeholder: "deposits.account",
      required: false,
      parameterKey: "allocationAccount",
      value: state?.allocationAccount,
      options: [],
      isValid: true,
      readOnly: true,
    },
  ]
}

const newDepositInputs = (state) => {
  return [
    {
      name: "depositDate",
      label: "deposits.depositDate",
      type: "date",
      placeholder: "deposits.depositDate",
      required: false,
      parameterKey: "depositDate",
      value: state?.depositDate ,
      options: [],
      isValid: true,
      readOnly: true,
    },
    {
      name: "depositAccount",
      label: "deposits.accountCode",
      type: "text",
      placeholder: "deposits.accountCode",
      required: false,
      parameterKey: "depositAccount",
      value: state?.depositAccount,
      options: [],
      isValid: true,
      readOnly: true,
    },
    {
      name: "bankName",
      label: "deposits.depositedToBank",
      type: "text",
      placeholder: "deposits.depositedToBank",
      required: false,
      parameterKey: "bankName",
      value: state?.bankName,
      options: [],
      isValid: true,
      readOnly: true,
    },
    {
      name: "bankBranch",
      label: "deposits.depositedToBranch",
      type: "text",
      placeholder: "deposits.depositedToBranch",
      required: false,
      parameterKey: "bankBranch",
      value: state?.bankBranch,
      options: [],
      isValid: true,
      readOnly: true,
    },
    {
      name: "bankAccountNUM",
      label: "deposits.depositedToAccount",
      type: "text",
      placeholder: "deposits.depositedToAccount",
      required: false,
      parameterKey: "bankAccountNUM",
      value: state?.bankAccountNUM,
      options: [],
      isValid: true,
      readOnly: true,
    },
    {
      name: "bankReference",
      label: "deposits.bankRefernce",
      type: "text",
      placeholder: "deposits.bankRefernce",
      required: false,
      parameterKey: "bankReference",
      value: state?.bankReference,
      options: [],
      isValid: true,
      readOnly: true,
    },
    {
      name: "depositor",
      label: "deposits.depositor",
      type: "text",
      placeholder: "deposits.depositor",
      required: false,
      parameterKey: "depositor",
      value: state?.depositor,
      options: [],
      isValid: true,
      readOnly: true,
    },
    {
      name: "allocationAccount",
      label: "deposits.account",
      type: "text",
      placeholder: "deposits.account",
      required: false,
      parameterKey: "allocationAccount",
      value: state?.allocationAccount,
      options: [],
      isValid: true,
      readOnly: true,
    },
  ]
}


export { DepositInputs  , newDepositInputs};